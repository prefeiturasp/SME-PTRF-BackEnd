# Generated by Django 3.2.20 on 2023-09-06 13:19

import logging
from django.db import migrations
from django.db.models import Q

logger = logging.getLogger(__name__)


def populate_data_inicio(apps, schema_editor):
    ContaAssociacao = apps.get_model('core', 'ContaAssociacao')
    ValoresReprogramados = apps.get_model('core', 'ValoresReprogramados')
    Repasse = apps.get_model('receitas', 'Repasse')

    # Percorrer todas as contas
    for conta in ContaAssociacao.objects.all():

        data_inicio = None

        # Verificar se há valores reprogramados para esta conta
        valores_reprogramados = ValoresReprogramados.objects.filter(conta_associacao=conta).filter(Q(valor_ue__gt=0) | Q(valor_dre__gt=0)).order_by('periodo__data_inicio_realizacao_despesas').first()

        if valores_reprogramados:
            logger.info(f"Encontrado Valores Reprogramados: {valores_reprogramados} para a Conta {conta}")
            data_inicio = valores_reprogramados.periodo.data_inicio_realizacao_despesas
            logger.info(f"Data início dos Valores Reprogramados: {data_inicio}")
        else:
            # Caso não haja valores reprogramados, verificar Repasse
            repasse = Repasse.objects.filter(conta_associacao=conta).filter(Q(valor_capital__gt=0) | Q(valor_custeio__gt=0) | Q(valor_livre__gt=0)).order_by('periodo__data_inicio_realizacao_despesas').first()

            if repasse:
                logger.info(f"Encontrado Repasse: {repasse} para a Conta {conta}")
                data_inicio = repasse.periodo.data_inicio_realizacao_despesas
                logger.info(f"Data início do Repasse: {data_inicio}")

        # Salve as alterações na conta
        conta.data_inicio = data_inicio
        logger.info(f"Salvando Conta Data Início: {data_inicio}")
        conta.save()


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0350_contaassociacao_data_inicio'),
    ]

    operations = [
        migrations.RunPython(populate_data_inicio, reverse_code=migrations.RunPython.noop),
    ]
