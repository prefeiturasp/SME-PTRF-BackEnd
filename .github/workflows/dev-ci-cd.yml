name: Dev - CI/CD
 
on:

  push:
    branches: [ develop ]
    paths-ignore:
    - ".github/workflows/**"  
  
  workflow_dispatch:

jobs:            

  pytest:
  
    runs-on: self-hosted
    if: ${{ github.ref == 'refs/heads/develop' }}
    steps:
    
      - uses: actions/checkout@v2
      
      - name: Delete Container..
        run: if [ ! -z $(docker ps -q --filter "name=ptrf-db") ]; then docker rm -f ptrf-db; fi


      - name: Preparing Container...
        #CriaÃ§Ã£o do container de banco de dados e copia das variaveis que serÃ£o carregadas.
        run: |
          docker run -d --rm --cap-add SYS_TIME --name ptrf-db -p 5432 --network python-network -e TZ="America/Sao_Paulo" -e POSTGRES_DB=ptrf -e POSTGRES_PASSWORD=adminadmin -e POSTGRES_USER=postgres postgres:11-alpine
          echo "copiando fontes..."
          cp /srv/env/ptrf .
          
      - name: Running Python Tests
        uses: luizhpriotto/action_images@python36-v1.0
        with:
          command: |
            echo "Conectando o container a rede python..."
            docker network connect python-network $(hostname)
            echo "Carregando as variaveis de ambiente..."
            source ptrf
            pip install --user pipenv -r requirements/local.txt
            python manage.py collectstatic --noinput
            echo "##### COVERAGE ####"
            coverage run -m pytest
            coverage xml
            ls -ltra
            cat coverage.xml
            
      - name: Delete Container..
        if: ${{ ( failure() ) || ( success() ) }}
        run: if [ ! -z $(docker ps -q --filter "name=ptrf-db") ]; then docker rm -f ptrf-db; fi

  sonar:
  
    runs-on: self-hosted
    needs: [ pytest ]
    if: ${{ github.ref == 'refs/heads/develop' }}
    steps:
      - uses: actions/checkout@v2
          
      - name: Sonar
        uses: luizhpriotto/action_images@sonarscannercli-v2.2
        env:
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST: http://sonar.sme.prefeitura.sp.gov.br/
          SONAR_EXTRA_ARG: >
            -Dsonar.python.coverage.reportPaths=*.xml
            -Dsonar.scm.provider=git
          
      - name: send failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸ’¥ Failed in ${{ github.ref_name	}}!
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}            
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  build:

    runs-on: self-hosted
    if: ${{ github.ref == 'refs/heads/develop' }}
    needs: [ sonar ]
    steps:
      - uses: actions/checkout@v2     
      -  name: Login to registry
         uses: docker/login-action@v1
         with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PWD }}
    
      - name: Build the Docker image    
        run: | 
             docker build . --tag ${{ secrets.REGISTRY_HOST }}/${GITHUB_REF##*/}/ptrf-backend
             docker push ${{ secrets.REGISTRY_HOST }}/${GITHUB_REF##*/}/ptrf-backend
             
      - name: send failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸ’¥ Failed in ${{ github.ref_name	}}!
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}            
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
             
  deploy:
  
    runs-on: self-hosted
    needs: [ build ]
    if: ${{ github.ref == 'refs/heads/develop' }}        
    environment:
      name: development
    steps:
      - name: Redeploy
        uses: luizhpriotto/action_images@kubectl-v2.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sme-ptrf
          WORKLOAD: ptrf-backend,ptrf-celery,ptrf-flower
          
      - name: send failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸ’¥ Failed in ${{ github.ref_name	}}!
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}            
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
      - name: send success message
        if: ${{ success() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ðŸš€ Success in ${{ github.ref_name	}}!
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}            
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
