name: CI/CD
#CI/CD com rotinas de testes 
on:

  push:
    branches: [ master, pre-prod, develop, homolog-r2 ]
    paths-ignore:
    - ".github/workflows/**"  
  
  workflow_dispatch:

jobs:

  pytest:
  
    runs-on: self-hosted
    steps:
    
      - uses: actions/checkout@v2
      
      - name: Delete Container..
        run: if [ ! -z $(docker ps -q --filter "name=ptrf-db") ]; then docker rm -f ptrf-db; fi


      - name: Preparing Container...
        #Cria√ß√£o do container de banco de dados e copia das variaveis que ser√£o carregadas.
        run: |
          docker run -d --rm --cap-add SYS_TIME --name ptrf-db -p 5432 --network python-network -e TZ="America/Sao_Paulo" -e POSTGRES_DB=ptrf -e POSTGRES_PASSWORD=adminadmin -e POSTGRES_USER=postgres postgres:11-alpine
          echo "copiando fontes..."
          cp /srv/env/ptrf .
          
      - name: Running Python Tests
        uses: luizhpriotto/action_images@python36-v1.0
        with:
          command: |
            echo "Conectando o container a rede python..."
            docker network connect python-network $(hostname)
            echo "Carregando as variaveis de ambiente..."
            source ptrf
            pip install --user pipenv -r requirements/local.txt
            python manage.py collectstatic --noinput
            echo "##### COVERAGE ####"
            coverage run -m pytest
            coverage xml
            ls -ltra
            
      - name: Upload Reports
        uses: actions/upload-artifact@v2
        with:
          name: reports
          path: coverage.xml
            
      - name: Delete Container..
        if: ${{ ( failure() ) || ( success() ) }}
        run: if [ ! -z $(docker ps -q --filter "name=ptrf-db") ]; then docker rm -f ptrf-db; fi

  sonar:
  
    runs-on: self-hosted
    needs: [ pytest ]
    steps:
      - uses: actions/checkout@v2
      
      - name: Download Reports
        uses: actions/download-artifact@v2
        with:
          name: reports
          
      - name: Sonar
        uses: luizhpriotto/action_images@sonarscannercli-v2.2
        env:
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST: http://sonar.sme.prefeitura.sp.gov.br/
          SONAR_EXTRA_ARG: >
            -Dsonar.python.coverage.reportPaths=*.xml
          
      - name: send failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üí• Failed in ${{ github.ref_name	}}!
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}            
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
         
  build:

    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2     
      -  name: Login to registry
         uses: docker/login-action@v1
         with:
          registry: ${{ secrets.REGISTRY_HOST }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PWD }}
    
      - name: Build the Docker image    
        run: |
             docker login ${{ secrets.REGISTRY_HOST }}
             docker build . --tag ${{ secrets.REGISTRY_HOST }}/${GITHUB_REF##*/}/ptrf-backend
             docker push ${{ secrets.REGISTRY_HOST }}/${GITHUB_REF##*/}/ptrf-backend
             
      - name: send failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üí• Failed in ${{ github.ref_name	}}!
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}            
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
      - name: send message asking for aprove
        if: ${{ ( github.ref == 'refs/heads/master') && ( success() ) }}
        uses: appleboy/telegram-action@master
        with:
          to: -752736369
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üòç Por favor me aprove!!!!!
            branch: ${{ github.ref_name	}}
            ${{ github.actor }} created commit:
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            üöÄüöÄüöÄ
            To aprove: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
             
  deploy-k8s-hom:
  
    runs-on: self-hosted
    needs: [ build,sonar ]
    if: ${{ github.ref == 'refs/heads/homolog-r2' }}
    
    environment:
      name: release
    steps:          
      - name: Redeploy Hom2
        uses: luizhpriotto/action_images@kubectl-v2.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sme-ptrf-hom2
          WORKLOAD: ptrf-backend,ptrf-celery,ptrf-flower
                   
  deploy-k8s-dev:
  
    runs-on: self-hosted
    needs: [ build,sonar ]
    if: ${{ github.ref == 'refs/heads/develop' }}
    
    environment:
      name: development
    steps:          
      - name: Redeploy Dev
        uses: luizhpriotto/action_images@kubectl-v2.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sme-ptrf
          WORKLOAD: ptrf-backend,ptrf-celery,ptrf-flower
                     
  deploy-k8s-prod:
  
    runs-on: self-hosted
    needs: [ build,sonar ]
    if: ${{ github.ref == 'refs/heads/master' }}
    environment:
      name: production
    steps:
  
      - name: Redeploy Prod
        uses: luizhpriotto/action_images@kubectl-v2.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sme-ptrf
          WORKLOAD: ptrf-backend,ptrf-celery,ptrf-flower
          
      - name: Redeploy Pre Prod
        uses: luizhpriotto/action_images@kubectl-v2.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sme-sigescola-pre
          WORKLOAD: sigescolapre-backend,sigescolapre-celery,sigescolapre-flower
          
      - name: Redeploy Treinamento
        uses: luizhpriotto/action_images@kubectl-v2.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sigescola-treinamento
          WORKLOAD: treinamento-backend,treinamento-celery,treinamento-flower
          
      - name: Redeploy Treinamento 2
        uses: luizhpriotto/action_images@kubectl-v2.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sigescola-treinamento2
          WORKLOAD: treinamento-backend,treinamento-celery,treinamento-flower
          
      - name: send failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            üí• Failed in ${{ github.ref_name	}}!
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}            
            Repository: ${{ github.repository }}            
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}
            Actions: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}

  deploy-k8s-pre-prod:
  
    runs-on: self-hosted
    needs: [ build,sonar ]
    if: ${{ github.ref == 'refs/heads/pre-prod' }}
    environment:
      name: production
    steps:

      - name: Redeploy Pre Prod
        uses: luizhpriotto/action_images@kubectl-v2.0
        env: 
          RANCHER_URL: ${{ secrets.RANCHER_URL }}
          RANCHER_TOKEN: ${{ secrets.RANCHER_TOKEN }}
          NAMESPACE: sme-sigescola-pre
